@model IEnumerable<QuizMaster.Models.TakeQuiz>
@{
    ViewData["Title"] = "History";

    int currentPage = ViewBag.CurrentPage;
    int totalPages = ViewBag.TotalPages;
}

@section Styles {
        <link rel="stylesheet" href="~/css/history.css" />
}

<div class="container pt-4">
    @if (!Model.Any())
    {
        <div class="history-empty text-center mt-5">
            <h2 class="text-center mb-3">Looks like you haven't played a quiz yet</h2>
            <a class="myButton myButton2-primary text-decoration-none text-white" asp-area="" asp-controller="Home" asp-action="Index">
                Find a quiz
            </a>
        </div>
    }
    else
    {
        <div class="history-exists">
            <h2 class="text-center mb-3">Quiz history</h2>

            <div class="row">
                @foreach (var takeQuiz in Model)
                {
                    <div class="col-12 col-xl-3 col-lg-4 col-md-6 col-sm-6 mb-4">
                        <div class="historyQuizCard">
                            <h5 class="history-quiz-title">@takeQuiz.Quiz.Title</h5>
                            <span class="history-quiz-summary text-gray-dark">@takeQuiz.Quiz.Summary</span>
                            <span class="history-quiz-questions">@takeQuiz.Quiz.QuizQuestions.Count questions</span>
                            <span class="history-quiz-tag">@takeQuiz.Quiz.Tag</span>
                            <span class="history-quiz-difficulty">
                                Difficulty:
                                <strong class="@GetCssClassForDifficulty(takeQuiz.Quiz.Level)">
                                    @ConvertLevelToDifficulty(takeQuiz.Quiz.Level)
                                </strong>
                            </span>
                            
                            <div class="d-flex justify-content-between mt-3">
                                <span>Taken at:</span>
                                <span>@takeQuiz.StartedAt</span>
                            </div>

                            <div class="d-flex justify-content-between">
                                <span>Score:</span>
                                <span class="fw-bold">@takeQuiz.Score/@takeQuiz.Quiz.Score</span>
                            </div>
                        </div>
                    </div>
                }
            </div>
            @if (totalPages > 1)
            {
                <nav aria-label="Page navigation">
                    <ul class="pagination justify-content-center">
                        <!-- Previous Button -->
                        <li class="page-item @((currentPage == 1) ? "disabled" : "")">
                            <a class="page-link fw-semibold" href="@Url.Action("History", new { pageIndex = currentPage - 1})">
                                <i class="fa-solid fa-angles-left"></i>
                            </a>
                        </li>

                        <!-- Page Number Links -->
                        @for (var i = 1; i <= totalPages; i++)
                        {
                            <li class="page-item @((i == currentPage) ? "active" : "")">
                                <a class="page-link fw-semibold" href="@Url.Action("History", new { pageIndex = i})">@i</a>
                            </li>
                        }

                        <!-- Next Button -->
                        <li class="page-item @((currentPage == totalPages) ? "disabled" : "")">
                            <a class="page-link fw-semibold" href="@Url.Action("History", new { pageIndex = currentPage + 1})">
                                <i class="fa-solid fa-angles-right"></i>
                            </a>
                        </li>
                    </ul>
                </nav>
            }
        </div>
    }
</div>
@functions {
    private string ConvertLevelToDifficulty(int level)
    {
        switch (level)
        {
            case 1:
                return "Easy";
            case 2:
                return "Medium";
            case 3:
                return "Hard";
            default:
                return "Unknown";
        }
    }

    private string GetCssClassForDifficulty(int level)
    {
        switch (level)
        {
            case 1:
                return "text-success";
            case 2:
                return "text-warning";
            default:
                return "text-danger";
        }
    }
}